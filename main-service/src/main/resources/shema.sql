CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    user_name VARCHAR(255) NOT NULL,
    user_email VARCHAR(512) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS categories (
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    category_name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
    event_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    event_annotation VARCHAR(2000) NOT NULL CHECK ( event_annotation >= 20 AND event_annotation <= 2000),
    event_category BIGINT REFERENCES categories (category_id) ON DELETE CASCADE ON UPDATE CASCADE NOT NULL,
    event_created_on timestamptz NOT NULL,
    event_description VARCHAR(7000) NOT NULL CHECK ( event_description >= 20 AND event_description <= 7000 ),
    event_date timestamptz NOT NULL,
    event_initiator BIGINT REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    event_lat DOUBLE PRECISION,
    event_lon DOUBLE PRECISION,
    event_is_paid BOOLEAN,
    event_participant_limit BIGINT,
    event_published timestamptz,
    event_request_moderation BOOLEAN,
    event_state VARCHAR(32) NOT NULL,
    event_title VARCHAR(120) NOT NULL CHECK ( event_annotation >= 3 AND event_annotation <= 120)
);

CREATE TABLE IF NOT EXISTS compilations (
    compilation_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    compilation_is_pinned BOOLEAN NOT NULL,
    compilation_title VARCHAR(120) NOT NULL CHECK ( compilation_title >= 3 AND compilation_title <= 120)
);

CREATE TABLE IF NOT EXISTS compilation_events (
    event_id BIGINT REFERENCES events (event_id) ON DELETE CASCADE ON UPDATE CASCADE,
    compilation_id BIGINT REFERENCES compilations (compilation_id) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (event_id, compilation_id)
);

CREATE TABLE IF NOT EXISTS participation_requests (
    participation_request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    participation_request_created timestamptz NOT NULL,
    participation_request_event BIGINT REFERENCES events (event_id) ON DELETE CASCADE ON UPDATE CASCADE,
    participation_request_requester BIGINT REFERENCES users (user_id) ON DELETE CASCADE ON UPDATE CASCADE,
    participation_request_status VARCHAR(32) NOT NULL
);